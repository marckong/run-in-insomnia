{"_type":"export","__export_format":4,"__export_date":"2022-11-10T03:26:43.858Z","__export_source":"insomnia.desktop.app:v2022.7.0-beta.4","resources":[{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb23acbe44","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb1b034c38","modified":1666639923318,"created":1666639923318,"url":"{{ base_url }}/pet","name":"Add a new pet to the store","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"string\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"string\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1666639923319,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_da9aab3d1da649658a1925967fb8eecb1b034c38","parentId":"wrk_da9aab3d1da649658a1925967fb8eecb","modified":1666639923352,"created":1666639923352,"name":"pet","description":"Everything about your Pets","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1666639923352,"_type":"request_group"},{"_id":"wrk_da9aab3d1da649658a1925967fb8eecb","parentId":null,"modified":1666639629414,"created":1666639629414,"name":"my-spec.yaml","description":"","scope":"design","_type":"workspace"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb74a7a059","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb1b034c38","modified":1666639923301,"created":1666639923301,"url":"{{ base_url }}/pet","name":"Update an existing pet","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"string\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"string\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1666639923301,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb80ab0d08","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb1b034c38","modified":1666639923289,"created":1666639923289,"url":"{{ base_url }}/pet/findByStatus","name":"Finds Pets by status","description":"","method":"GET","body":{},"parameters":[{"name":"status","disabled":false,"value":"available"}],"headers":[],"authentication":{},"metaSortKey":-1666639923289,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb42a17980","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb1b034c38","modified":1666639923282,"created":1666639923282,"url":"{{ base_url }}/pet/findByTags","name":"Finds Pets by tags","description":"","method":"GET","body":{},"parameters":[{"name":"tags","disabled":false,"value":"string"}],"headers":[],"authentication":{},"metaSortKey":-1666639923282,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb3d1a51d3","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb1b034c38","modified":1666639923272,"created":1666639923272,"url":"{{ base_url }}/pet/{{ petId }}","name":"Find pet by ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666639923272,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecba4608701","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb1b034c38","modified":1666639923269,"created":1666639923269,"url":"{{ base_url }}/pet/{{ petId }}","name":"Updates a pet in the store with form data","description":"","method":"POST","body":{"mimeType":"application/x-www-form-urlencoded"},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666639923269,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecbe804bd05","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb1b034c38","modified":1666639923266,"created":1666639923266,"url":"{{ base_url }}/pet/{{ petId }}","name":"Deletes a pet","description":"","method":"DELETE","body":{},"parameters":[],"headers":[{"name":"api_key","disabled":true,"value":"string"}],"authentication":{},"metaSortKey":-1666639923266,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb443ac9e7","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb3a21295d","modified":1666639923263,"created":1666639923263,"url":"{{ base_url }}/store/inventory","name":"Returns pet inventories by status","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666639923263,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_da9aab3d1da649658a1925967fb8eecb3a21295d","parentId":"wrk_da9aab3d1da649658a1925967fb8eecb","modified":1666639923339,"created":1666639923339,"name":"store","description":"Access to Petstore orders","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1666639923339,"_type":"request_group"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecbe24a4f9e","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb3a21295d","modified":1666639923257,"created":1666639923257,"url":"{{ base_url }}/store/order","name":"Place an order for a pet","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"petId\": 0,\n  \"quantity\": 0,\n  \"shipDate\": \"2022-10-24T19:32:03.193Z\",\n  \"status\": \"string\",\n  \"complete\": true\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1666639923257,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecbf021bcd3","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb3a21295d","modified":1666639923252,"created":1666639923252,"url":"{{ base_url }}/store/order/{{ orderId }}","name":"Find purchase order by ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666639923252,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb15e47538","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb3a21295d","modified":1666639923249,"created":1666639923249,"url":"{{ base_url }}/store/order/{{ orderId }}","name":"Delete purchase order by ID","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666639923249,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecbfe3d55d0","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb12dea96f","modified":1666639923241,"created":1666639923241,"url":"{{ base_url }}/user","name":"Create user","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"username\": \"string\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"email\": \"string\",\n  \"password\": \"string\",\n  \"phone\": \"string\",\n  \"userStatus\": 0\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1666639923241,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_da9aab3d1da649658a1925967fb8eecb12dea96f","parentId":"wrk_da9aab3d1da649658a1925967fb8eecb","modified":1666639923326,"created":1666639923326,"name":"user","description":"Operations about user","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1666639923326,"_type":"request_group"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb4cb83333","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb12dea96f","modified":1666639923237,"created":1666639923237,"url":"{{ base_url }}/user/createWithArray","name":"Creates list of users with given input array","description":"","method":"POST","body":{"mimeType":"application/json","text":"[\n  {\n    \"id\": 0,\n    \"username\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"password\": \"string\",\n    \"phone\": \"string\",\n    \"userStatus\": 0\n  }\n]"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1666639923237,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecbe94a615f","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb12dea96f","modified":1666639923234,"created":1666639923234,"url":"{{ base_url }}/user/createWithList","name":"Creates list of users with given input array","description":"","method":"POST","body":{"mimeType":"application/json","text":"[\n  {\n    \"id\": 0,\n    \"username\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"password\": \"string\",\n    \"phone\": \"string\",\n    \"userStatus\": 0\n  }\n]"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1666639923234,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb00ac9da2","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb12dea96f","modified":1666639923231,"created":1666639923231,"url":"{{ base_url }}/user/login","name":"Logs user into the system","description":"","method":"GET","body":{},"parameters":[{"name":"username","disabled":false,"value":"string"},{"name":"password","disabled":false,"value":"string"}],"headers":[],"authentication":{},"metaSortKey":-1666639923231,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb740025cb","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb12dea96f","modified":1666639923226,"created":1666639923226,"url":"{{ base_url }}/user/logout","name":"Logs out current logged in user session","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666639923226,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb74f1d1d1","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb12dea96f","modified":1666639923219,"created":1666639923219,"url":"{{ base_url }}/user/{{ username }}","name":"Get user by user name","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666639923219,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb6d74493f","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb12dea96f","modified":1666639923210,"created":1666639923210,"url":"{{ base_url }}/user/{{ username }}","name":"Updated user","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"username\": \"string\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"email\": \"string\",\n  \"password\": \"string\",\n  \"phone\": \"string\",\n  \"userStatus\": 0\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1666639923210,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_da9aab3d1da649658a1925967fb8eecb38e8e88f","parentId":"fld_wrk_da9aab3d1da649658a1925967fb8eecb12dea96f","modified":1666639923202,"created":1666639923202,"url":"{{ base_url }}/user/{{ username }}","name":"Delete user","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1666639923203,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_33b88a5f63860f99e7e8bf28ab3429a73b72602e","parentId":"wrk_da9aab3d1da649658a1925967fb8eecb","modified":1666639629417,"created":1666639629417,"name":"Base Environment","data":{"base_url":"{{ scheme }}://{{ host }}{{ base_path }}"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1666639629417,"_type":"environment"},{"_id":"jar_33b88a5f63860f99e7e8bf28ab3429a73b72602e","parentId":"wrk_da9aab3d1da649658a1925967fb8eecb","modified":1666639629418,"created":1666639629418,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_33132ec6f62249bca261a93a83e1c5f6","parentId":"wrk_da9aab3d1da649658a1925967fb8eecb","modified":1666639923403,"created":1666639629415,"fileName":"my-spec.yaml","contents":"openapi: 3.0.0\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    `special-key` to test the authorization filters.\"\n  version: 1.0.2\n  title: Swagger Petstore\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  /pet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: \"\"\n      operationId: addPet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"405\":\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: \"\"\n      operationId: updatePet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n        \"405\":\n          description: Validation exception\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid tag value\n      deprecated: true\n  \"/pet/{petId}\":\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: \"\"\n      operationId: updatePetWithForm\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet that needs to be updated\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n      responses:\n        \"405\":\n          description: Invalid input\n    delete:\n      tags:\n        - pet\n      summary: Deletes a pet\n      description: \"\"\n      operationId: deletePet\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: petId\n          in: path\n          description: Pet id to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: \"\"\n      operationId: placeOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n        description: order placed for purchasing the pet\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid Order\n  \"/store/order/{orderId}\":\n    get:\n      tags:\n        - store\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value >= 1 and <= 10. Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of pet that needs to be fetched\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            maximum: 10\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n    delete:\n      tags:\n        - store\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value. Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order that needs to be deleted\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n  /user:\n    post:\n      tags:\n        - user\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Created user object\n        required: true\n      responses:\n        default:\n          description: successful operation\n  /user/createWithArray:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithArrayInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/createWithList:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithListInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/login:\n    get:\n      tags:\n        - user\n      summary: Logs user into the system\n      description: \"\"\n      operationId: loginUser\n      parameters:\n        - name: username\n          in: query\n          description: The user name for login\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          description: The password for login in clear text\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          headers:\n            X-Rate-Limit:\n              description: calls per hour allowed by the user\n              schema:\n                type: integer\n                format: int32\n            X-Expires-After:\n              description: date in UTC when token expires\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/xml:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid username/password supplied\n  /user/logout:\n    get:\n      tags:\n        - user\n      summary: Logs out current logged in user session\n      description: \"\"\n      operationId: logoutUser\n      responses:\n        default:\n          description: successful operation\n  \"/user/{username}\":\n    get:\n      tags:\n        - user\n      summary: Get user by user name\n      description: \"\"\n      operationId: getUserByName\n      parameters:\n        - name: username\n          in: path\n          description: \"The name that needs to be fetched. Use user1 for testing. \"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\n    put:\n      tags:\n        - user\n      summary: Updated user\n      description: This can only be done by the logged in user.\n      operationId: updateUser\n      parameters:\n        - name: username\n          in: path\n          description: name that need to be updated\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Updated user object\n        required: true\n      responses:\n        \"400\":\n          description: Invalid user supplied\n        \"404\":\n          description: User not found\n    delete:\n      tags:\n        - user\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: deleteUser\n      parameters:\n        - name: username\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\ncomponents:\n  requestBodies:\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n      description: List of user object\n      required: true\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n      description: Pet object that needs to be added to the store\n      required: true\n  schemas:\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          format: int32\n          description: User Status\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: \"#/components/schemas/Category\"\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string","contentType":"yaml","_type":"api_spec"},{"_id":"env_env_33b88a5f63860f99e7e8bf28ab3429a73b72602e_sub","parentId":"env_33b88a5f63860f99e7e8bf28ab3429a73b72602e","modified":1666639923368,"created":1666639923368,"name":"OpenAPI env","data":{"scheme":"https","base_path":"/v2","host":"petstore.swagger.io"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1666639923368,"_type":"environment"}]}
